{"version":3,"file":"filter-tilt-shift.js","sources":["../src/TiltShiftAxisFilter.ts","../src/TiltShiftXFilter.ts","../src/TiltShiftYFilter.ts","../src/TiltShiftFilter.ts"],"sourcesContent":["import { vertex } from '@tools/fragments';\nimport fragment from './tilt-shift.frag';\nimport { Filter, Point } from '@pixi/core';\n\n// @author Vico @vicocotea\n// original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js\n// by Evan Wallace : http://madebyevan.com/\n\n/**\n * Options for creating filter.\n */\ninterface TiltShiftFilterOptions\n{\n    /** The strength of the blur. */\n    blur: number;\n    /** The strength of the blur gradient */\n    gradientBlur: number;\n    /** The position to start the effect at. */\n    start?: Point | undefined;\n    /** The position to end the effect at. */\n    end?: Point | undefined;\n}\n\n/**\n * A TiltShiftAxisFilter.\n *\n * @class\n * @extends PIXI.Filter\n * @private\n */\nclass TiltShiftAxisFilter extends Filter\n{\n    constructor(options: TiltShiftFilterOptions)\n    {\n        super(vertex, fragment);\n\n        this.uniforms.blur = options.blur;\n        this.uniforms.gradientBlur = options.gradientBlur;\n        this.uniforms.start = options.start ?? new Point(0, window.innerHeight / 2);\n        this.uniforms.end = options.end ?? new Point(600, window.innerHeight / 2);\n        this.uniforms.delta = new Point(30, 30);\n        this.uniforms.texSize = new Point(window.innerWidth, window.innerHeight);\n        this.updateDelta();\n    }\n\n    /**\n     * Updates the filter delta values.\n     * This is overridden in the X and Y filters, does nothing for this class.\n     *\n     */\n    protected updateDelta(): void\n    {\n        this.uniforms.delta.x = 0;\n        this.uniforms.delta.y = 0;\n    }\n\n    /**\n     * The strength of the blur.\n     *\n     * @memberof TiltShiftAxisFilter#\n     */\n    get blur(): number\n    {\n        return this.uniforms.blur;\n    }\n    set blur(value: number)\n    {\n        this.uniforms.blur = value;\n    }\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @memberof TiltShiftAxisFilter#\n     */\n    get gradientBlur(): number\n    {\n        return this.uniforms.gradientBlur;\n    }\n    set gradientBlur(value: number)\n    {\n        this.uniforms.gradientBlur = value;\n    }\n\n    /**\n     * The X value to start the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof TiltShiftAxisFilter#\n     */\n    get start(): Point\n    {\n        return this.uniforms.start;\n    }\n    set start(value: Point)\n    {\n        this.uniforms.start = value;\n        this.updateDelta();\n    }\n\n    /**\n     * The X value to end the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof TiltShiftAxisFilter#\n     */\n    get end(): Point\n    {\n        return this.uniforms.end;\n    }\n    set end(value: Point)\n    {\n        this.uniforms.end = value;\n        this.updateDelta();\n    }\n}\n\nexport { TiltShiftAxisFilter };\nexport type { TiltShiftFilterOptions };\n","import { TiltShiftAxisFilter } from './TiltShiftAxisFilter';\n\n// @author Vico @vicocotea\n// original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js\n// by Evan Wallace : http://madebyevan.com/\n\n/**\n * A TiltShiftXFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @private\n */\nclass TiltShiftXFilter extends TiltShiftAxisFilter\n{\n    /**\n     * Updates the filter delta values.\n     */\n    protected updateDelta(): void\n    {\n        const dx = this.uniforms.end.x - this.uniforms.start.x;\n        const dy = this.uniforms.end.y - this.uniforms.start.y;\n        const d = Math.sqrt((dx * dx) + (dy * dy));\n\n        this.uniforms.delta.x = dx / d;\n        this.uniforms.delta.y = dy / d;\n    }\n}\n\nexport { TiltShiftXFilter };\n","import { TiltShiftAxisFilter } from './TiltShiftAxisFilter';\n\n// @author Vico @vicocotea\n// original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js\n// by Evan Wallace : http://madebyevan.com/\n\n/**\n * A TiltShiftYFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @private\n */\nclass TiltShiftYFilter extends TiltShiftAxisFilter\n{\n    /**\n     * Updates the filter delta values.\n     */\n    protected updateDelta(): void\n    {\n        const dx = this.uniforms.end.x - this.uniforms.start.x;\n        const dy = this.uniforms.end.y - this.uniforms.start.y;\n        const d = Math.sqrt((dx * dx) + (dy * dy));\n\n        this.uniforms.delta.x = -dy / d;\n        this.uniforms.delta.y = dx / d;\n    }\n}\n\nexport { TiltShiftYFilter };\n","import { TiltShiftXFilter } from './TiltShiftXFilter';\nimport { TiltShiftYFilter } from './TiltShiftYFilter';\nimport { Filter, FilterSystem, RenderTexture, utils } from '@pixi/core';\nimport type { Point, CLEAR_MODES } from '@pixi/core';\nimport type { TiltShiftFilterOptions } from './TiltShiftAxisFilter';\n\n// @author Vico @vicocotea\n// original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js\n// by Evan Wallace : http://madebyevan.com/\n\n/**\n * A TiltShift Filter. Manages the pass of both a TiltShiftXFilter and TiltShiftYFilter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/tilt-shift.png)\n *\n * @class\n * @extends PIXI.Filter\n * @see {@link https://www.npmjs.com/package/@pixi/filter-tilt-shift|@pixi/filter-tilt-shift}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\nclass TiltShiftFilter extends Filter\n{\n    /** Default options */\n    static readonly defaults: TiltShiftFilterOptions = {\n        /** The strength of the blur. */\n        blur: 100,\n        /** The strength of the blur gradient */\n        gradientBlur: 600,\n        /** The position to start the effect at. */\n        start: undefined,\n        /** The position to end the effect at. */\n        end: undefined,\n    };\n\n    private tiltShiftXFilter: TiltShiftXFilter;\n    private tiltShiftYFilter: TiltShiftYFilter;\n\n    /**\n     * @param {TiltShiftFilterOptions} [options] - The optional parameters of the tilt shift filter.\n     */\n    constructor(options?: Partial<TiltShiftFilterOptions>);\n\n    /**\n     * @deprecated since 5.3.0\n     * @param {number} [blur=100] - The strength of the blur.\n     * @param {number} [gradientBlur=600] - The strength of the gradient blur.\n     * @param {PIXI.Point} [start=null] - The position to start the effect at.\n     * @param {PIXI.Point} [end=null] - The position to end the effect at.\n     */\n    constructor(blur?: number, gradientBlur?: number, start?: Point, end?: Point);\n\n    /** @ignore */\n    constructor(options?: Partial<TiltShiftFilterOptions> | number, gradientBlur?: number, start?: Point, end?: Point)\n    {\n        super();\n\n        if (typeof options === 'number')\n        {\n            utils.deprecation('5.3.0', 'TiltShiftFilter constructor arguments is deprecated, use options.');\n            options = { blur: options, gradientBlur, start, end };\n        }\n\n        options = Object.assign({}, TiltShiftFilter.defaults, options);\n\n        this.tiltShiftXFilter = new TiltShiftXFilter(options as TiltShiftFilterOptions);\n        this.tiltShiftYFilter = new TiltShiftYFilter(options as TiltShiftFilterOptions);\n    }\n\n    apply(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clearMode: CLEAR_MODES): void\n    {\n        const renderTarget = filterManager.getFilterTexture();\n\n        this.tiltShiftXFilter.apply(filterManager, input, renderTarget, 1);\n        this.tiltShiftYFilter.apply(filterManager, renderTarget, output, clearMode);\n        filterManager.returnFilterTexture(renderTarget);\n    }\n\n    /** The strength of the blur. */\n    get blur(): number\n    {\n        return this.tiltShiftXFilter.blur;\n    }\n    set blur(value: number)\n    {\n        this.tiltShiftXFilter.blur = this.tiltShiftYFilter.blur = value;\n    }\n\n    /** The strength of the gradient blur. */\n    get gradientBlur(): number\n    {\n        return this.tiltShiftXFilter.gradientBlur;\n    }\n    set gradientBlur(value: number)\n    {\n        this.tiltShiftXFilter.gradientBlur = this.tiltShiftYFilter.gradientBlur = value;\n    }\n\n    /**\n     * The position to start the effect at.\n     *\n     * @member {PIXI.Point}\n     */\n    get start(): Point\n    {\n        return this.tiltShiftXFilter.start;\n    }\n    set start(value: Point)\n    {\n        this.tiltShiftXFilter.start = this.tiltShiftYFilter.start = value;\n    }\n\n    /**\n     * The position to end the effect at.\n     *\n     * @member {PIXI.Point}\n     */\n    get end(): Point\n    {\n        return this.tiltShiftXFilter.end;\n    }\n    set end(value: Point)\n    {\n        this.tiltShiftXFilter.end = this.tiltShiftYFilter.end = value;\n    }\n}\n\nexport { TiltShiftFilter };\n\n"],"names":["TiltShiftAxisFilter","Filter","options","_a","_b","vertex","fragment","Point","value","TiltShiftXFilter","dx","dy","d","TiltShiftYFilter","_TiltShiftFilter","gradientBlur","start","end","utils","filterManager","input","output","clearMode","renderTarget","TiltShiftFilter"],"mappings":"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"}