/*!
 * @pixi/filter-bloom - v5.1.1
 * Compiled Wed, 11 Jan 2023 23:10:33 UTC
 *
 * @pixi/filter-bloom is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */import{Filter as b,Point as F,BLEND_MODES as o,settings as n}from"@pixi/core";import{AlphaFilter as h}from"@pixi/filter-alpha";import{BlurFilterPass as s}from"@pixi/filter-blur";class p extends b{constructor(t=2,l=4,e=n.FILTER_RESOLUTION,i=5){super();let r,u;typeof t=="number"?(r=t,u=t):t instanceof F?(r=t.x,u=t.y):Array.isArray(t)&&(r=t[0],u=t[1]),this.blurXFilter=new s(!0,r,l,e,i),this.blurYFilter=new s(!1,u,l,e,i),this.blurYFilter.blendMode=o.SCREEN,this.defaultFilter=new h}apply(t,l,e,i){const r=t.getFilterTexture();this.defaultFilter.apply(t,l,e,i),this.blurXFilter.apply(t,l,r,1),this.blurYFilter.apply(t,r,e,0),t.returnFilterTexture(r)}get blur(){return this.blurXFilter.blur}set blur(t){this.blurXFilter.blur=this.blurYFilter.blur=t}get blurX(){return this.blurXFilter.blur}set blurX(t){this.blurXFilter.blur=t}get blurY(){return this.blurYFilter.blur}set blurY(t){this.blurYFilter.blur=t}}export{p as BloomFilter};
//# sourceMappingURL=filter-bloom.mjs.map
