{"version":3,"file":"filter-bloom.mjs","sources":["../src/BloomFilter.ts"],"sourcesContent":["import { Filter, Point, BLEND_MODES, settings } from '@pixi/core';\nimport { AlphaFilter } from '@pixi/filter-alpha';\nimport { BlurFilterPass } from '@pixi/filter-blur';\nimport type { FilterSystem, RenderTexture, CLEAR_MODES } from '@pixi/core';\n\ntype BlurValue = number | Point | number[];\n\n/**\n * The BloomFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/bloom.png)\n *\n * @class\n * @extends PIXI.Filter\n * @see {@link https://www.npmjs.com/package/@pixi/filter-bloom|@pixi/filter-bloom}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\nclass BloomFilter extends Filter\n{\n    private blurXFilter: BlurFilterPass;\n    private blurYFilter: BlurFilterPass;\n    private defaultFilter: AlphaFilter;\n\n    /**\n    * @param {number|PIXI.Point|number[]} [blur=2] - Sets the strength of both the blurX and blurY properties simultaneously\n    * @param {number} [quality=4] - The quality of the blurX & blurY filter.\n    * @param {number} [resolution=PIXI.settings.FILTER_RESOLUTION] - The resolution of the blurX & blurY filter.\n    * @param {number} [kernelSize=5] - The kernelSize of the blurX & blurY filter.Options: 5, 7, 9, 11, 13, 15.\n    */\n    constructor(blur: BlurValue = 2, quality = 4, resolution: number = settings.FILTER_RESOLUTION, kernelSize = 5)\n    {\n        super();\n\n        let blurX;\n        let blurY;\n\n        if (typeof blur === 'number')\n        {\n            blurX = blur;\n            blurY = blur;\n        }\n        else if (blur instanceof Point)\n        {\n            blurX = blur.x;\n            blurY = blur.y;\n        }\n        else if (Array.isArray(blur))\n        {\n            blurX = blur[0];\n            blurY = blur[1];\n        }\n\n        this.blurXFilter = new BlurFilterPass(true, blurX, quality, resolution, kernelSize);\n        this.blurYFilter = new BlurFilterPass(false, blurY, quality, resolution, kernelSize);\n        this.blurYFilter.blendMode = BLEND_MODES.SCREEN;\n        this.defaultFilter = new AlphaFilter();\n    }\n\n    apply(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clear: CLEAR_MODES): void\n    {\n        const renderTarget = filterManager.getFilterTexture();\n\n        // TODO - copyTexSubImage2D could be used here?\n        this.defaultFilter.apply(filterManager, input, output, clear);\n\n        this.blurXFilter.apply(filterManager, input, renderTarget, 1);\n        this.blurYFilter.apply(filterManager, renderTarget, output, 0);\n\n        filterManager.returnFilterTexture(renderTarget);\n    }\n\n    /**\n     * Sets the strength of both the blurX and blurY properties simultaneously\n     * @default 2\n     */\n    get blur(): number\n    {\n        return this.blurXFilter.blur;\n    }\n    set blur(value: number)\n    {\n        this.blurXFilter.blur = this.blurYFilter.blur = value;\n    }\n\n    /**\n     * Sets the strength of the blurX property\n     * @default 2\n     */\n    get blurX(): number\n    {\n        return this.blurXFilter.blur;\n    }\n    set blurX(value: number)\n    {\n        this.blurXFilter.blur = value;\n    }\n\n    /**\n     * Sets the strength of the blurY property\n     * @default 2\n     */\n    get blurY(): number\n    {\n        return this.blurYFilter.blur;\n    }\n    set blurY(value: number)\n    {\n        this.blurYFilter.blur = value;\n    }\n}\n\nexport { BloomFilter };\n\n"],"names":["BloomFilter","Filter","blur","quality","resolution","settings","kernelSize","blurX","blurY","Point","BlurFilterPass","BLEND_MODES","AlphaFilter","filterManager","input","output","clear","renderTarget","value"],"mappings":";;;;;;qLAiBA,MAAMA,UAAoBC,CAC1B,CAWI,YAAYC,EAAkB,EAAGC,EAAU,EAAGC,EAAqBC,EAAS,kBAAmBC,EAAa,EAC5G,CACI,MAAM,EAEN,IAAIC,EACAC,EAEA,OAAON,GAAS,UAEhBK,EAAQL,EACRM,EAAQN,GAEHA,aAAgBO,GAErBF,EAAQL,EAAK,EACbM,EAAQN,EAAK,GAER,MAAM,QAAQA,CAAI,IAEvBK,EAAQL,EAAK,GACbM,EAAQN,EAAK,IAGjB,KAAK,YAAc,IAAIQ,EAAe,GAAMH,EAAOJ,EAASC,EAAYE,CAAU,EAClF,KAAK,YAAc,IAAII,EAAe,GAAOF,EAAOL,EAASC,EAAYE,CAAU,EACnF,KAAK,YAAY,UAAYK,EAAY,OACzC,KAAK,cAAgB,IAAIC,CAC7B,CAEA,MAAMC,EAA6BC,EAAsBC,EAAuBC,EAChF,CACI,MAAMC,EAAeJ,EAAc,iBAAiB,EAGpD,KAAK,cAAc,MAAMA,EAAeC,EAAOC,EAAQC,CAAK,EAE5D,KAAK,YAAY,MAAMH,EAAeC,EAAOG,EAAc,CAAC,EAC5D,KAAK,YAAY,MAAMJ,EAAeI,EAAcF,EAAQ,CAAC,EAE7DF,EAAc,oBAAoBI,CAAY,CAClD,CAMA,IAAI,MACJ,CACI,OAAO,KAAK,YAAY,IAC5B,CACA,IAAI,KAAKC,EACT,CACI,KAAK,YAAY,KAAO,KAAK,YAAY,KAAOA,CACpD,CAMA,IAAI,OACJ,CACI,OAAO,KAAK,YAAY,IAC5B,CACA,IAAI,MAAMA,EACV,CACI,KAAK,YAAY,KAAOA,CAC5B,CAMA,IAAI,OACJ,CACI,OAAO,KAAK,YAAY,IAC5B,CACA,IAAI,MAAMA,EACV,CACI,KAAK,YAAY,KAAOA,CAC5B,CACJ"}