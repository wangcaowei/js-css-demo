{"version":3,"file":"filter-pixelate.js","sources":["../src/PixelateFilter.ts"],"sourcesContent":["import { vertex } from '@tools/fragments';\nimport fragment from './pixelate.frag';\nimport { Filter } from '@pixi/core';\nimport type { Point } from '@pixi/core';\n\ntype Size = number | number[] | Point;\n\n/**\n * This filter applies a pixelate effect making display objects appear 'blocky'.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/pixelate.png)\n *\n * @class\n * @extends PIXI.Filter\n * @see {@link https://www.npmjs.com/package/@pixi/filter-pixelate|@pixi/filter-pixelate}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\nclass PixelateFilter extends Filter\n{\n    /**\n     * @param {PIXI.Point|Array<number>|number} [size=10] - Either the width/height of the size of the pixels, or square size\n     */\n    constructor(size: Size = 10)\n    {\n        super(vertex, fragment);\n        this.size = size;\n    }\n\n    /**\n     * This a point that describes the size of the blocks.\n     * x is the width of the block and y is the height.\n     *\n     * @member {PIXI.Point|Array<number>|number}\n     * @default 10\n     */\n    get size(): Size\n    {\n        return this.uniforms.size;\n    }\n    set size(value: Size)\n    {\n        if (typeof value === 'number')\n        {\n            value = [value, value];\n        }\n        this.uniforms.size = value;\n    }\n}\n\nexport { PixelateFilter };\n"],"names":["PixelateFilter","Filter","size","vertex","fragment","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgBA,MAAMA,UAAuBC,EAC7B,MAAA,CAII,YAAYC,EAAa,GACzB,CACI,MAAMC,EAAQC,CAAQ,EACtB,KAAK,KAAOF,CAChB,CASA,IAAI,MACJ,CACI,OAAO,KAAK,SAAS,IACzB,CACA,IAAI,KAAKG,EACT,CACQ,OAAOA,GAAU,WAEjBA,EAAQ,CAACA,EAAOA,CAAK,GAEzB,KAAK,SAAS,KAAOA,CACzB,CACJ"}