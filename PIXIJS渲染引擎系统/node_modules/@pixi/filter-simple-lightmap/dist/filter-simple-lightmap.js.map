{"version":3,"file":"filter-simple-lightmap.js","sources":["../src/SimpleLightmapFilter.ts"],"sourcesContent":["import { vertex } from '@tools/fragments';\nimport fragment from './simpleLightmap.frag';\nimport { Filter, utils } from '@pixi/core';\nimport type { Texture, FilterSystem, RenderTexture, CLEAR_MODES } from '@pixi/core';\n\ntype Color = number | number[];\n\n/**\n* SimpleLightmap, originally by Oza94\n* http://www.html5gamedevs.com/topic/20027-pixijs-simple-lightmapping/\n* http://codepen.io/Oza94/pen/EPoRxj\n*\n* You have to specify filterArea, or suffer consequences.\n* You may have to use it with `filter.dontFit = true`,\n*  until we rewrite this using same approach as for DisplacementFilter.\n*\n* ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/simple-lightmap.png)\n* @class\n* @extends PIXI.Filter\n* @see {@link https://www.npmjs.com/package/@pixi/filter-simple-lightmap|@pixi/filter-simple-lightmap}\n* @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n*\n* @example\n*  displayObject.filters = [new SimpleLightmapFilter(texture, 0x666666)];\n*/\nclass SimpleLightmapFilter extends Filter\n{\n    private _color = 0x0;\n\n    /**\n     * @param {PIXI.Texture} texture - a texture where your lightmap is rendered\n     * @param {Array<number>|number} [color=0x000000] - An RGBA array of the ambient color\n     * @param {number} [alpha=1] - Default alpha set independent of color (if it's a number, not array).\n     */\n    constructor(texture: Texture, color: Color = 0x000000, alpha = 1)\n    {\n        super(vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n        this.uniforms.ambientColor = new Float32Array([0, 0, 0, alpha]);\n        this.texture = texture;\n        this.color = color;\n    }\n\n    /**\n     * Applies the filter.\n     * @private\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     */\n    apply(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clear: CLEAR_MODES): void\n    {\n        this.uniforms.dimensions[0] = input.filterFrame?.width;\n        this.uniforms.dimensions[1] = input.filterFrame?.height;\n\n        // draw the filter...\n        filterManager.applyFilter(this, input, output, clear);\n    }\n\n    /**\n     * a texture where your lightmap is rendered\n     * @member {PIXI.Texture}\n     */\n    get texture(): Texture\n    {\n        return this.uniforms.uLightmap;\n    }\n    set texture(value: Texture)\n    {\n        this.uniforms.uLightmap = value;\n    }\n\n    /**\n     * An RGBA array of the ambient color or a hex color without alpha\n     * @member {Array<number>|number}\n     */\n    set color(value: Color)\n    {\n        const arr = this.uniforms.ambientColor;\n\n        if (typeof value === 'number')\n        {\n            utils.hex2rgb(value, arr);\n            this._color = value;\n        }\n        else\n        {\n            arr[0] = value[0];\n            arr[1] = value[1];\n            arr[2] = value[2];\n            arr[3] = value[3];\n            this._color = utils.rgb2hex(arr);\n        }\n    }\n    get color(): Color\n    {\n        return this._color;\n    }\n\n    /**\n     * When setting `color` as hex, this can be used to set alpha independently.\n     */\n    get alpha(): number\n    {\n        return this.uniforms.ambientColor[3];\n    }\n    set alpha(value: number)\n    {\n        this.uniforms.ambientColor[3] = value;\n    }\n}\n\nexport { SimpleLightmapFilter };\n"],"names":["SimpleLightmapFilter","Filter","texture","color","alpha","vertex","fragment","filterManager","input","output","clear","_a","_b","value","arr","utils"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAyBA,MAAMA,UAA6BC,EACnC,MAAA,CAQI,YAAYC,EAAkBC,EAAe,EAAUC,EAAQ,EAC/D,CACI,MAAMC,EAAQC,CAAQ,EAT1B,KAAQ,OAAS,EAUb,KAAK,SAAS,WAAa,IAAI,aAAa,CAAC,EAC7C,KAAK,SAAS,aAAe,IAAI,aAAa,CAAC,EAAG,EAAG,EAAGF,CAAK,CAAC,EAC9D,KAAK,QAAUF,EACf,KAAK,MAAQC,CACjB,CASA,MAAMI,EAA6BC,EAAsBC,EAAuBC,EAChF,CAnDJ,IAAAC,EAAAC,EAoDQ,KAAK,SAAS,WAAW,IAAKD,EAAAH,EAAM,cAAN,YAAAG,EAAmB,MACjD,KAAK,SAAS,WAAW,IAAKC,EAAAJ,EAAM,cAAN,KAAAI,OAAAA,EAAmB,OAGjDL,EAAc,YAAY,KAAMC,EAAOC,EAAQC,CAAK,CACxD,CAMA,IAAI,SACJ,CACI,OAAO,KAAK,SAAS,SACzB,CACA,IAAI,QAAQG,EACZ,CACI,KAAK,SAAS,UAAYA,CAC9B,CAMA,IAAI,MAAMA,EACV,CACI,MAAMC,EAAM,KAAK,SAAS,aAEtB,OAAOD,GAAU,UAEjBE,EAAAA,MAAM,QAAQF,EAAOC,CAAG,EACxB,KAAK,OAASD,IAIdC,EAAI,GAAKD,EAAM,GACfC,EAAI,GAAKD,EAAM,GACfC,EAAI,GAAKD,EAAM,GACfC,EAAI,GAAKD,EAAM,GACf,KAAK,OAASE,EAAM,MAAA,QAAQD,CAAG,EAEvC,CACA,IAAI,OACJ,CACI,OAAO,KAAK,MAChB,CAKA,IAAI,OACJ,CACI,OAAO,KAAK,SAAS,aAAa,EACtC,CACA,IAAI,MAAMD,EACV,CACI,KAAK,SAAS,aAAa,GAAKA,CACpC,CACJ"}