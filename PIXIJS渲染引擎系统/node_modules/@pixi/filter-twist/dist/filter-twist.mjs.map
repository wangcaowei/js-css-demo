{"version":3,"file":"filter-twist.mjs","sources":["../src/TwistFilter.ts"],"sourcesContent":["import { vertex } from '@tools/fragments';\nimport fragment from './twist.frag';\nimport { Filter, Point } from '@pixi/core';\n\ninterface TwistFilterOptions\n{\n    radius: number;\n    angle: number;\n    padding: number;\n    offset: Point;\n}\n\n/**\n * This filter applies a twist effect making display objects appear twisted in the given direction.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/twist.png)\n *\n * @class\n * @extends PIXI.Filter\n * @see {@link https://www.npmjs.com/package/@pixi/filter-twist|@pixi/filter-twist}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\nclass TwistFilter extends Filter\n{\n    /** Default constructor options. */\n    public static readonly defaults: TwistFilterOptions = {\n        radius: 200,\n        angle: 4,\n        padding: 20,\n        offset: new Point(),\n    };\n\n    /**\n     * @param {object} [options] - Object object to use.\n     * @param {number} [options.radius=200] - The radius of the twist.\n     * @param {number} [options.angle=4] - The angle of the twist.\n     * @param {number} [options.padding=20] - Padding for filter area.\n     * @param {PIXI.Point} [options.offset] - Center of twist, in local, pixel coordinates.\n     */\n    constructor(options?: Partial<TwistFilterOptions>)\n    {\n        super(vertex, fragment);\n\n        Object.assign(this, TwistFilter.defaults, options);\n    }\n\n    /**\n     * This point describes the the offset of the twist.\n     *\n     * @member {PIXI.Point}\n     */\n    get offset(): Point\n    {\n        return this.uniforms.offset;\n    }\n    set offset(value: Point)\n    {\n        this.uniforms.offset = value;\n    }\n\n    /**\n     * The radius of the twist.\n     */\n    get radius(): number\n    {\n        return this.uniforms.radius;\n    }\n    set radius(value: number)\n    {\n        this.uniforms.radius = value;\n    }\n\n    /**\n     * The angle of the twist.\n     */\n    get angle(): number\n    {\n        return this.uniforms.angle;\n    }\n    set angle(value: number)\n    {\n        this.uniforms.angle = value;\n    }\n}\n\nexport { TwistFilter };\nexport type { TwistFilterOptions };\n"],"names":["_TwistFilter","Filter","options","vertex","fragment","value","TwistFilter","Point"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAqBA,MAAMA,EAAN,cAA0BC,CAC1B,CAgBI,YAAYC,EACZ,CACI,MAAMC,EAAQC,CAAQ,EAEtB,OAAO,OAAO,KAAMJ,EAAY,SAAUE,CAAO,CACrD,CAOA,IAAI,QACJ,CACI,OAAO,KAAK,SAAS,MACzB,CACA,IAAI,OAAOG,EACX,CACI,KAAK,SAAS,OAASA,CAC3B,CAKA,IAAI,QACJ,CACI,OAAO,KAAK,SAAS,MACzB,CACA,IAAI,OAAOA,EACX,CACI,KAAK,SAAS,OAASA,CAC3B,CAKA,IAAI,OACJ,CACI,OAAO,KAAK,SAAS,KACzB,CACA,IAAI,MAAMA,EACV,CACI,KAAK,SAAS,MAAQA,CAC1B,CACJ,EA7DA,IAAMC,EAANN,EAAMM,EAGqB,SAA+B,CAClD,OAAQ,IACR,MAAO,EACP,QAAS,GACT,OAAQ,IAAIC,CAChB"}