{"version":3,"file":"filter-radial-blur.js","sources":["../src/RadialBlurFilter.ts"],"sourcesContent":["import { vertex } from '@tools/fragments';\nimport fragment from './radial-blur.frag';\nimport { Filter } from '@pixi/core';\nimport type { Point, CLEAR_MODES, FilterSystem, RenderTexture } from '@pixi/core';\n\ntype PointLike = Point | number[];\n\n/**\n * The RadialBlurFilter applies a Motion blur to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/radial-blur.png)\n *\n * @class\n * @extends PIXI.Filter\n * @see {@link https://www.npmjs.com/package/@pixi/filter-radial-blur|@pixi/filter-radial-blur}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\nclass RadialBlurFilter extends Filter\n{\n    private _angle = 0;\n\n    /**\n     * The kernelSize for the blur filter. Must be odd number >= 3.\n     * @default 5\n     */\n    public kernelSize: number;\n\n    /**\n     * @param {number} [angle=0] - Sets the angle of the motion for blur effect.\n     * @param {PIXI.Point|number[]} [center=[0,0]] - The center of the radial.\n     * @param {number} [kernelSize=5] - The kernelSize of the blur filter. Must be odd number >= 3\n     * @param {number} [radius=-1] - The maximum size of the blur radius, `-1` is infinite\n     */\n    constructor(angle = 0, center: PointLike = [0, 0], kernelSize = 5, radius = -1)\n    {\n        super(vertex, fragment);\n\n        this.angle = angle;\n        this.center = center;\n        this.kernelSize = kernelSize;\n        this.radius = radius;\n    }\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    apply(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clear: CLEAR_MODES): void\n    {\n        this.uniforms.uKernelSize = this._angle !== 0 ? this.kernelSize : 0;\n        filterManager.applyFilter(this, input, output, clear);\n    }\n\n    /**\n     * Sets the angle in degrees of the motion for blur effect.\n     * @default 0\n     */\n    set angle(value: number)\n    {\n        this._angle = value;\n        this.uniforms.uRadian = value * Math.PI / 180;\n    }\n\n    get angle(): number\n    {\n        return this._angle;\n    }\n\n    /**\n     * Center of the effect.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [0, 0]\n     */\n    get center(): PointLike\n    {\n        return this.uniforms.uCenter;\n    }\n\n    set center(value: PointLike)\n    {\n        this.uniforms.uCenter = value;\n    }\n\n    /**\n     * Outer radius of the effect. The default value of `-1` is infinite.\n     * @default -1\n     */\n    get radius(): number\n    {\n        return this.uniforms.uRadius;\n    }\n\n    set radius(value: number)\n    {\n        if (value < 0 || value === Infinity)\n        {\n            value = -1;\n        }\n        this.uniforms.uRadius = value;\n    }\n}\n\nexport { RadialBlurFilter };\n\n"],"names":["RadialBlurFilter","Filter","angle","center","kernelSize","radius","vertex","fragment","filterManager","input","output","clear","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgBA,MAAMA,UAAyBC,EAC/B,MAAA,CAeI,YAAYC,EAAQ,EAAGC,EAAoB,CAAC,EAAG,CAAC,EAAGC,EAAa,EAAGC,EAAS,GAC5E,CACI,MAAMC,EAAQC,CAAQ,EAhB1B,KAAQ,OAAS,EAkBb,KAAK,MAAQL,EACb,KAAK,OAASC,EACd,KAAK,WAAaC,EAClB,KAAK,OAASC,CAClB,CAMA,MAAMG,EAA6BC,EAAsBC,EAAuBC,EAChF,CACI,KAAK,SAAS,YAAc,KAAK,SAAW,EAAI,KAAK,WAAa,EAClEH,EAAc,YAAY,KAAMC,EAAOC,EAAQC,CAAK,CACxD,CAMA,IAAI,MAAMC,EACV,CACI,KAAK,OAASA,EACd,KAAK,SAAS,QAAUA,EAAQ,KAAK,GAAK,GAC9C,CAEA,IAAI,OACJ,CACI,OAAO,KAAK,MAChB,CAQA,IAAI,QACJ,CACI,OAAO,KAAK,SAAS,OACzB,CAEA,IAAI,OAAOA,EACX,CACI,KAAK,SAAS,QAAUA,CAC5B,CAMA,IAAI,QACJ,CACI,OAAO,KAAK,SAAS,OACzB,CAEA,IAAI,OAAOA,EACX,EACQA,EAAQ,GAAKA,IAAU,OAEvBA,EAAQ,IAEZ,KAAK,SAAS,QAAUA,CAC5B,CACJ"}